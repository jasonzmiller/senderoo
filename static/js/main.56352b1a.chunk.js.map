{"version":3,"sources":["reducers/area-reducer.js","reducers/weather-reducer.js","services/area-service.js","components/area-list.js","services/weather-service.js","components/weather-card.js","components/weather-display.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","areas","areaReducer","state","action","type","weatherForCity","weatherReducer","weather","api","findAllAreas","fetch","mode","method","headers","then","response","json","connect","dispatch","areaService","useEffect","className","findWeatherForCity","city","WeatherCard","useState","detailed","setDetailed","name","onClick","console","log","src","alt","Math","round","main","temp","feels_like","temp_min","temp_max","weatherService","item","searchItem","setSearchItem","cityList","setCityList","placeholder","onChange","e","target","value","id","map","reducer","combineReducers","store","createStore","App","style","backgroundColor","height","path","exact","component","WeatherDisplay","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56352b1a.chunk.js","sourcesContent":["const initialState = {\n    areas: []\n}\n\nconst areaReducer = ( state = initialState , action ) => {\n    switch ( action.type ) {\n        case \"FIND_ALL_AREAS\":\n            return {\n                ...state,\n                areas: action.areas\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default areaReducer","const initialState = {\n    weatherForCity: {\n        \"coord\": {\n            \"lon\": -122.08,\n            \"lat\": 37.39\n          },\n          \"weather\": [\n            {\n              \"id\": 800,\n              \"main\": \"Clear\",\n              \"description\": \"clear sky\",\n              \"icon\": \"01d\"\n            }\n          ],\n          \"base\": \"stations\",\n          \"main\": {\n            \"temp\": 282.55,\n            \"feels_like\": 281.86,\n            \"temp_min\": 280.37,\n            \"temp_max\": 284.26,\n            \"pressure\": 1023,\n            \"humidity\": 100\n          },\n          \"visibility\": 16093,\n          \"wind\": {\n            \"speed\": 1.5,\n            \"deg\": 350\n          },\n          \"clouds\": {\n            \"all\": 1\n          },\n          \"dt\": 1560350645,\n          \"sys\": {\n            \"type\": 1,\n            \"id\": 5122,\n            \"message\": 0.0139,\n            \"country\": \"US\",\n            \"sunrise\": 1560343627,\n            \"sunset\": 1560396563\n          },\n          \"timezone\": -25200,\n          \"id\": 420006353,\n          \"name\": \"Mountain View\",\n          \"cod\": 200\n    }\n}\n\nconst weatherReducer = ( state = initialState , action ) => {\n    switch ( action.type ) {\n        case \"FIND_WEATHER_FOR_CITY\":\n            return {\n                ...state,\n                weatherForCity: action.weather\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default weatherReducer","const AREA_URL = \"https://skimap.org/SkiAreas/index.json\";\n\nexport const findAllAreas = () =>\n    fetch(\"https://skimap.org/SkiAreas/index.json\", {\n        mode: 'no-cors',\n        method: 'GET',\n        headers: {'Content-Type': 'application/json'} \n    })\n        .then(response => response.json())\n\nconst api = {\n    findAllAreas\n}\n\nexport default api;","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport areaService, { findAllAreas } from \"../services/area-service\";\n\nconst AreaList = (\n    {\n        areas=[],\n        findAllAreas\n    }) => {\n\n    useEffect(() => {\n        findAllAreas()\n    }, [])\n    \n    return(\n        <>\n        <ul className=\"list-group\">\n        {\n            areas &&\n            <h1>AREAS</h1>\n        }\n        {\n            !areas &&\n            <h1>NO AREAS :/</h1>\n        }\n        </ul>\n        </>\n    )\n}\n\nconst stpm = ( state ) => ({\n    areas: state.areaReducer.areas\n})\n\nconst dtpm = ( dispatch ) => ({\n    findAllAreas: () => {\n        areaService.findAllAreas()\n            .then(areas => dispatch({\n                type: \"FIND_ALL_AREAS\",\n                areas\n            }))\n    }\n})\n\nexport default connect ( stpm , dtpm ) ( AreaList );","const MAIN_URL = \"api.openweathermap.org/data/2.5\"\nconst CITY_URL = \"api.openweathermap.org/data/2.5/weather?q=denver&appid=01911f7b486c0e1468d2f43de9366608\";\nconst APPID = \"appid=01911f7b486c0e1468d2f43de9366608\"\n\nexport const findWeatherForCity = (city) => \n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=01911f7b486c0e1468d2f43de9366608`)\n        .then(response => response.json())\n\nconst api = {\n    findWeatherForCity\n}\n\nexport default api","import React, {useState} from 'react';\nimport '../styles/weather-card.css'\nconst WeatherCard = (\n    {\n        city\n    }\n) => {\n\n    const [detailed, setDetailed] = useState(false)\n\n    return(\n        <>\n        {\n           !detailed &&\n           <>\n           <div className=\"col-xl-3 col-lg-4 col-sm-6 col-xs-12\">\n                <div className=\"card\">\n                    <div className=\"card-body\"> \n                      <div className=\"title-container\">\n                        <h5 className=\"card-title\">\n                            {city.name}\n                        </h5>\n                      </div>\n                        <i onClick={() => {\n                            setDetailed(true)\n                            console.log(\"Clicked\")\n                        }}\n                        className=\"fas fa-plus fa-2x float-right\"></i>\n                        <img src=\"https://images.unsplash.com/photo-1532124957326-34c5605398?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1567&q=80\"\n                            className=\"card-img-top\" alt=\"...\"/>\n                    </div>\n                </div>\n            </div>\n            </>\n        }\n        {\n            detailed &&\n            <>\n                <div className=\"col-xl-3 col-lg-4 col-sm-6 col-xs-12\">\n                    <div className=\"card\">\n                        <div className=\"card-body\"> \n                          <div className=\"title-container\">\n                            <h5 className=\"card-title\">\n                                {city.name}\n                            </h5>\n                          </div>\n                            <i onClick={() => {\n                                setDetailed(false)\n                            }}\n                            className=\"fas fa-minus fa-2x float-right\"></i>\n                            <img src=\"https://images.unsplash.com/photo-1532124957326-34c5605398?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1567&q=80\"\n                                className=\"card-img-top\" alt=\"...\"/>\n                            <ul className=\"list-group\">\n                                <li className=\"list-group-item\">Temperature: {Math.round(city.main.temp - 273.15)} &deg;C</li>\n                                <li className=\"list-group-item\">Feels Like: {Math.round(city.main.feels_like - 275.15)} &deg;C</li>\n                                <li className=\"list-group-item\">Low: {Math.round(city.main.temp_min - 275.15)} &deg;C</li>\n                                <li className=\"list-group-item\">Height: {Math.round(city.main.temp_max - 275.15)} &deg;C</li>\n                            </ul>\n                         </div>\n                    </div>\n                </div>\n            </>\n        }\n        </>\n    )\n}\n\nexport default WeatherCard;","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport weatherService from '../services/weather-service.js';\nimport WeatherCard from './weather-card.js';\n\nconst WeatherDisplay = (\n    {\n        weatherForCity,\n        findWeatherForCity,\n        item=\"denver\"\n    }\n) => {\n\n    const [searchItem, setSearchItem] = useState(item);\n\n    const [cityList, setCityList] = useState([weatherForCity]);\n\n    useEffect(() => {\n        findWeatherForCity(searchItem)\n    }, [searchItem])\n\n    return(\n        <>\n        <div className=\"input-group rounded\">\n            <input className=\"form-control rounded\" type=\"text\" placeholder=\"Add Location\" onChange={(e) => setSearchItem(e.target.value)}/>\n            <span className=\"input-group-text border-0\" id=\"search-addon\">\n                <i className=\"fas fa-check fa-2x\" onClick={() => {\n                    setCityList((cityList) => [...cityList, weatherForCity])}}></i>\n            </span>\n        </div>\n        <div className=\"row\">\n        {\n            cityList.map(city => <WeatherCard city={city}/>)\n        }\n        </div>\n        </>\n    )\n}\n\nconst stpm = ( state ) => ({\n    weatherForCity: state.weatherReducer.weatherForCity\n})\n\nconst dtpm = ( dispatch ) => ({\n    findWeatherForCity: (city) => {\n        weatherService.findWeatherForCity(city)\n        .then(weather => dispatch({\n            type: \"FIND_WEATHER_FOR_CITY\",\n            weather\n        }))\n    }\n})\n\nexport default connect ( stpm , dtpm ) ( WeatherDisplay )","import { BrowserRouter , Route } from 'react-router-dom';\nimport { combineReducers , createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport areaReducer from './reducers/area-reducer';\nimport weatherReducer from './reducers/weather-reducer';\nimport AreaList from './components/area-list.js';\nimport WeatherDisplay from './components/weather-display.js';\n\nconst reducer = combineReducers({\n  areaReducer,\n  weatherReducer\n})\n\nconst store = createStore(reducer)\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <div className=\"container-fluid\" style={{\n          backgroundColor: '#7CB9E8',\n          height: '100vh'\n          \n        }}>\n          {/*<Route path=\"/\" exact={true} component={AreaList}/>*/}\n          <Route path=\"/display\" exact={true} component={WeatherDisplay}/>\n        </div>\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}